/**
 * Created by IIS on 10.03.2016.
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class Cinema {
    public static void main(String[] args) throws SQLException {
        try (Connection connection = getConnection()) {
            try (PreparedStatement create1 = connection.prepareStatement("insert into HALLS(num, nrows) values (1, 10)")) {
                create1.execute();
            }
            try (PreparedStatement create3 = connection.prepareStatement("insert into HROWS(hall ,row ,seats)values (1, ?, 20)")) {
                for (int row = 1; row <= 10; row++) {
                    create3.setInt(1, row);
                    create3.execute();
                }
            }
            try (PreparedStatement create2 = connection.prepareStatement("insert into SEANCES(stime ,film ,hall ,age ,price ,date_from  ,date_to  ) values('15:00','Остров',1,16,300,'24.03.2016','15.04.2016')")) {
                create2.execute();
            }

        }

    }
    public static void createDB(Connection connection ) throws SQLException {
        try (PreparedStatement create1 = connection.prepareStatement("create table HALLS(num int not null primary key,nrows int not null)")) {
            create1.execute();
        }
        try (PreparedStatement create2 = connection.prepareStatement("create table SEANCES(ID int not null generated by default as identity (start with 100)primary key," +
                "stime varchar(5) not null,film varchar(100) not null,hall int not null,age int not null,price int not null,date_from date not null,date_to date not null," +
                "foreign key(hall)references HALLS(num))")) {
            create2.execute();
        }
        try (PreparedStatement create3 = connection.prepareStatement("create table HROWS(hall int not null,row int not null,seats int not null,foreign key(hall) references HALLS(num))")) {
            create3.execute();
        }
        try (PreparedStatement create4 = connection.prepareStatement("create table RESERVATIONS(userId varchar(100) not null,row int not null,seat int not null,seance int not null," +
                " rdate date not null," +
                "foreign key(seance)references SEANCES(ID))")) {
            create4.execute();
        }

    }
    public static Connection getConnection() throws SQLException {
        try{
            return DriverManager.getConnection("jdbc:derby:CinemaDB");
        }

        catch(SQLException e){
            Connection c=DriverManager.getConnection("jdbc:derby:CinemaDB;create=true");
            createDB(c);
            return c;

        }
    }
}